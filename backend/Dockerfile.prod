# Build stage
FROM rust:1.82-slim AS builder

# Install build dependencies: pkg-config and OpenSSL development libraries
RUN apt-get update && \
    apt-get install -y pkg-config libssl-dev && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /usr/src/app
COPY . .
RUN cargo build --release
FROM debian:bookworm-slim
WORKDIR /usr/src/app
COPY --from=builder /usr/src/app/target/release/backend ./backend
ENV NEO4J_URI=bolt://goals_db:7687
ENV NEO4J_USERNAME=neo4j
ENV NEO4J_PASSWORD=password123
ENV NEO4J_CONNECTION_TIMEOUT=120

# Install runtime dependencies: OpenSSL, CA certificates, and netcat
RUN apt-get update && \
    apt-get install -y libssl3 ca-certificates netcat-traditional && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Add a startup script to wait for Neo4j
RUN echo '#!/bin/bash\n\
    set -e\n\
    echo "Waiting for Neo4j to be ready..."\n\
    uri="${NEO4J_URI:-bolt://goals_db:7687}"\n\
    # Extract host and port from NEO4J_URI (format: bolt://host:port)\n\
    host=$(echo "$uri" | sed -E "s|bolt://([^:/]+):?([0-9]+)?/?|\\1|")\n\
    port=$(echo "$uri" | sed -E "s|bolt://([^:/]+):?([0-9]+)?/?|\\2|")\n\
    if [ -z "$port" ]; then port=7687; fi\n\
    echo "Using Neo4j host=$host port=$port"\n\
    timeout ${NEO4J_CONNECTION_TIMEOUT:-120} bash -c "\
    until nc -z \"$host\" \"$port\" 2>/dev/null; do \
    echo \"Waiting for Neo4j...\"; \
    sleep 5; \
    done"\n\
    echo "Neo4j is ready, starting backend..."\n\
    exec ./backend' > /start.sh && chmod +x /start.sh

EXPOSE 5059
CMD ["/start.sh"]
