#db/Dockerfile.prod
FROM neo4j:5-community

ENV NEO4J_AUTH=neo4j/password123

# Install required packages
RUN apt-get update && apt-get install -y \
    bash \
    cron \
    util-linux \
    tini \
    gosu \
    && rm -rf /var/lib/apt/lists/*

# Add neo4j user to crontab group
RUN adduser neo4j crontab && \
    touch /etc/cron.allow && \
    chown root:crontab /etc/cron.allow && \
    chmod 640 /etc/cron.allow && \
    echo "neo4j" >> /etc/cron.allow

# Set correct permissions
RUN mkdir -p /var/run/cron && \
    mkdir -p /scripts && \
    mkdir -p /backups && \
    mkdir -p /var/log/cron && \
    touch /var/log/cron/backup.log && \
    touch /var/run/crond.pid && \
    chown -R root:root /var/run/cron && \
    chmod 755 /var/run/cron && \
    chmod 644 /var/run/crond.pid && \
    chown -R neo4j:neo4j /backups && \
    chown neo4j:neo4j /var/log/cron/backup.log && \
    chmod 0644 /var/log/cron/backup.log

# Ensure startup directory exists and has correct permissions
RUN mkdir -p /startup && \
    chmod 755 /startup

# Copy scripts and set permissions
COPY backup.sh /scripts/backup.sh
COPY start.sh /scripts/start.sh
COPY crontab /etc/cron.d/backup-cron
RUN chmod +x /scripts/backup.sh /scripts/start.sh && \
    chmod 0644 /etc/cron.d/backup-cron

EXPOSE 7474 7687

# Use tini as entry point
ENTRYPOINT ["/usr/bin/tini", "--"]
CMD ["/scripts/start.sh"]